{"ast":null,"code":"import _classCallCheck from \"/Users/michaelfoster/Git/mryum/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelfoster/Git/mryum/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelfoster/Git/mryum/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelfoster/Git/mryum/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelfoster/Git/mryum/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaelfoster/Git/mryum/src/App.js\";\nimport { connect } from 'react-redux';\nimport { createRouteNodeSelector, actions } from 'redux-router5';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport _ from 'lodash';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Switch from './Switch';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          moduleMappings = _this$props.moduleMappings,\n          routeTo = _this$props.routeTo,\n          route = _this$props.route;\n      var topRouteName = route.name.split('.')[0];\n\n      if (route !== 'menu.venue') {\n        console.log('here');\n        actions.navigateTo('menu', {\n          venueId: 'madrasbrothers'\n        }, {});\n      }\n\n      return React.createElement(Switch, {\n        moduleMappings: moduleMappings,\n        topRouteName: topRouteName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nApp.propTypes = {\n  moduleMappings: PropTypes.objectOf(PropTypes.object).isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    router: state.router\n  };\n};\n\nexport default connect(createRouteNodeSelector(''), mapStateToProps)(App);","map":{"version":3,"sources":["/Users/michaelfoster/Git/mryum/src/App.js"],"names":["connect","createRouteNodeSelector","actions","PropTypes","React","_","Switch","App","props","moduleMappings","routeTo","route","topRouteName","name","split","console","log","navigateTo","venueId","Component","propTypes","objectOf","object","isRequired","mapStateToProps","state","router"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,uBAAT,EAAkCC,OAAlC,QAAiD,eAAjD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,WAAP;AACA,OAAO,sCAAP;AAEA,OAAOC,MAAP,MAAmB,UAAnB;;IAEMC,G;;;;;;;;;;;;;6BAEK;AAAA,wBACoC,KAAKC,KADzC;AAAA,UACCC,cADD,eACCA,cADD;AAAA,UACiBC,OADjB,eACiBA,OADjB;AAAA,UAC0BC,KAD1B,eAC0BA,KAD1B;AAEP,UAAMC,YAAY,GAAGD,KAAK,CAACE,IAAN,CAAWC,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAArB;;AAEA,UAAGH,KAAK,KAAK,YAAb,EAA0B;AACxBI,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAd,QAAAA,OAAO,CAACe,UAAR,CAAmB,MAAnB,EAA2B;AAACC,UAAAA,OAAO,EAAE;AAAV,SAA3B,EAAwD,EAAxD;AACD;;AAED,aACE,oBAAC,MAAD;AAAQ,QAAA,cAAc,EAAET,cAAxB;AAAwC,QAAA,YAAY,EAAEG,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;;;EAdeR,KAAK,CAACe,S;;AAiBxBZ,GAAG,CAACa,SAAJ,GAAgB;AACdX,EAAAA,cAAc,EAAEN,SAAS,CAACkB,QAAV,CAAmBlB,SAAS,CAACmB,MAA7B,EAAqCC;AADvC,CAAhB;;AAIA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCC,IAAAA,MAAM,EAAED,KAAK,CAACC;AADkB,GAAL;AAAA,CAA7B;;AAIA,eAAe1B,OAAO,CAACC,uBAAuB,CAAC,EAAD,CAAxB,EAA8BuB,eAA9B,CAAP,CAAsDjB,GAAtD,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport { createRouteNodeSelector, actions } from 'redux-router5'\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport _ from 'lodash';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Switch from './Switch';\n\nclass App extends React.Component {\n\n  render() {\n    const { moduleMappings, routeTo, route } = this.props;\n    const topRouteName = route.name.split('.')[0];\n    \n    if(route !== 'menu.venue'){\n      console.log('here')\n      actions.navigateTo('menu', {venueId: 'madrasbrothers'}, {})\n    }\n\n    return (\n      <Switch moduleMappings={moduleMappings} topRouteName={topRouteName} />\n    );\n  }\n}\n\nApp.propTypes = {\n  moduleMappings: PropTypes.objectOf(PropTypes.object).isRequired,\n};\n\nconst mapStateToProps = state => ({\n  router: state.router,\n});\n\nexport default connect(createRouteNodeSelector(''), mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}