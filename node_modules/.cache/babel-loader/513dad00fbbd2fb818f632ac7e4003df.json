{"ast":null,"code":"import _classCallCheck from \"/Users/evan/pitchblak/v2mryum/mryum/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/evan/pitchblak/v2mryum/mryum/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/evan/pitchblak/v2mryum/mryum/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/evan/pitchblak/v2mryum/mryum/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/evan/pitchblak/v2mryum/mryum/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/evan/pitchblak/v2mryum/mryum/src/components/Menu/Menu.js\";\n// Menu component - main dude,  gets called in App.js with url path to select correct venue in airtable\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport React, { Component } from 'react'; // import './App.css';\n\nimport * as actions from './actions/actions.js';\nimport LoadingScreen from '../LoadingScreen/LoadingScreen.js';\nimport NotFound from '../NotFound/NotFound.js';\nimport Section from './Section.js';\n\nvar Menu =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Menu, _Component);\n\n  function Menu() {\n    _classCallCheck(this, Menu);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Menu).apply(this, arguments));\n  }\n\n  _createClass(Menu, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var getMenuData = this.props.getMenuData;\n      getMenuData('Holla');\n    }\n  }, {\n    key: \"printMenu\",\n    value: function printMenu(menuSections) {\n      if (menuSections.length === 0) {\n        return React.createElement(NotFound, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        });\n      } else {\n        var menu = [];\n        Object.keys(menuSections).forEach(function (key) {\n          console.log(key);\n          menu.push(React.createElement(Section, {\n            name: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26\n            },\n            __self: this\n          }));\n        });\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, \"lol\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          bffRes = _this$props.bffRes,\n          isLoading = _this$props.isLoading;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, isLoading ? React.createElement(LoadingScreen, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }) : this.printMenu(bffRes));\n    }\n  }]);\n\n  return Menu;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators(actions, dispatch);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    router: state.router,\n    bffRes: state.menu.bffRes,\n    isLoading: state.menu.isLoading\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);","map":{"version":3,"sources":["/Users/evan/pitchblak/v2mryum/mryum/src/components/Menu/Menu.js"],"names":["connect","bindActionCreators","React","Component","actions","LoadingScreen","NotFound","Section","Menu","getMenuData","props","menuSections","length","menu","Object","keys","forEach","key","console","log","push","bffRes","isLoading","printMenu","mapDispatchToProps","dispatch","mapStateToProps","state","router"],"mappings":";;;;;;AAAA;AACA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;AACA,OAAO,KAAKC,OAAZ,MAAyB,sBAAzB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,OAAP,MAAoB,cAApB;;IAEMC,I;;;;;;;;;;;;;yCAEiB;AAAA,UACXC,WADW,GACK,KAAKC,KADV,CACXD,WADW;AAEnBA,MAAAA,WAAW,CAAC,OAAD,CAAX;AACD;;;8BAESE,Y,EAAc;AACtB,UAAIA,YAAY,CAACC,MAAb,KAAwB,CAA5B,EAA+B;AAC7B,eAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFD,MAEO;AACL,YAAIC,IAAI,GAAG,EAAX;AACAC,QAAAA,MAAM,CAACC,IAAP,CAAYJ,YAAZ,EAA0BK,OAA1B,CAAkC,UAAAC,GAAG,EAAI;AACvCC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAJ,UAAAA,IAAI,CAACO,IAAL,CACE,oBAAC,OAAD;AACE,YAAA,IAAI,EAAEH,GADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,SAPD;AAQA,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAR;AACD;AACF;;;6BAEQ;AAAA,wBACuB,KAAKP,KAD5B;AAAA,UACCW,MADD,eACCA,MADD;AAAA,UACSC,SADT,eACSA,SADT;AAGP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIA,SAAS,GACT,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADS,GAGR,KAAKC,SAAL,CAAeF,MAAf,CAJL,CADF;AASD;;;;EApCgBlB,S;;AAuCnB,IAAMqB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAIxB,kBAAkB,CAACG,OAAD,EAAUqB,QAAV,CAAtB;AAAA,CAAnC;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCC,IAAAA,MAAM,EAAED,KAAK,CAACC,MADkB;AAEhCP,IAAAA,MAAM,EAAEM,KAAK,CAACd,IAAN,CAAWQ,MAFa;AAGhCC,IAAAA,SAAS,EAAEK,KAAK,CAACd,IAAN,CAAWS;AAHU,GAAL;AAAA,CAA7B;;AAMA,eAAetB,OAAO,CAAC0B,eAAD,EAAkBF,kBAAlB,CAAP,CAA6ChB,IAA7C,CAAf","sourcesContent":["// Menu component - main dude,  gets called in App.js with url path to select correct venue in airtable\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport React, {Component} from 'react';\n// import './App.css';\nimport * as actions from './actions/actions.js'\nimport LoadingScreen from '../LoadingScreen/LoadingScreen.js'\nimport NotFound from '../NotFound/NotFound.js'\nimport Section from './Section.js'\n\nclass Menu extends Component {\n\n  componentWillMount() {\n    const { getMenuData } = this.props\n    getMenuData('Holla')\n  }\n\n  printMenu(menuSections) {\n    if (menuSections.length === 0) {\n      return <NotFound />\n    } else {\n      let menu = []\n      Object.keys(menuSections).forEach(key => {\n        console.log(key);\n        menu.push(\n          <Section\n            name={key}\n          />\n        )\n      })\n      return (<p>lol</p>)\n    }\n  }\n\n  render() {\n    const { bffRes, isLoading } = this.props\n\n    return (\n      <div>\n        { isLoading ?\n          <LoadingScreen />\n          :\n           this.printMenu(bffRes)\n         }\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators(actions, dispatch)\n\nconst mapStateToProps = state => ({\n  router: state.router,\n  bffRes: state.menu.bffRes,\n  isLoading: state.menu.isLoading,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);\n"]},"metadata":{},"sourceType":"module"}