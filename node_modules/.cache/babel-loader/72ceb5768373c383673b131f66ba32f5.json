{"ast":null,"code":"import _regeneratorRuntime from \"/Users/michaelfoster/Git/mryum/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getMenuData),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(actionWatcher);\n\nimport * as actionTypes from '../../components/Menu/actions/actionTypes/actionTypes.js';\nimport { takeLatest, put } from 'redux-saga/effects';\nimport callBff from '../callBff.js';\nexport function getMenuData(action) {\n  var res;\n  return _regeneratorRuntime.wrap(function getMenuData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return callBff('/menu', 'GET').then(function (response) {\n            return response;\n          });\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return put({\n            type: actionTypes.GET_MENU_DATA_SUCCESS,\n            res: res\n          });\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put({\n            type: actionTypes.GET_MENU_DATA_FAILURE,\n            error: _context.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 8]]);\n}\nexport function actionWatcher() {\n  return _regeneratorRuntime.wrap(function actionWatcher$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return [takeLatest(actionTypes.GET_MENU_DATA_REQUEST, getMenuData)];\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n}","map":{"version":3,"sources":["/Users/michaelfoster/Git/mryum/src/integration/sagas/menuIntegration.js"],"names":["getMenuData","actionWatcher","actionTypes","takeLatest","put","callBff","action","then","response","res","type","GET_MENU_DATA_SUCCESS","GET_MENU_DATA_FAILURE","error","GET_MENU_DATA_REQUEST"],"mappings":";;;;yBAIiBA,W;;;yBAmBAC,a;;AAvBjB,OAAO,KAAKC,WAAZ,MAA6B,0DAA7B;AACA,SAASC,UAAT,EAAqBC,GAArB,QAAgC,oBAAhC;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,OAAO,SAAUL,WAAV,CAAsBM,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKS,iBAAMD,OAAO,CAAC,OAAD,EAAU,KAAV,CAAP,CACfE,IADe,CACV,UAAAC,QAAQ;AAAA,mBAAIA,QAAJ;AAAA,WADE,CAAN;;AALT;AAKGC,UAAAA,GALH;AAAA;AAOD,iBAAML,GAAG,CAAC;AACRM,YAAAA,IAAI,EAAER,WAAW,CAACS,qBADV;AAERF,YAAAA,GAAG,EAAHA;AAFQ,WAAD,CAAT;;AAPC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAYH,iBAAML,GAAG,CAAC;AACRM,YAAAA,IAAI,EAAER,WAAW,CAACU,qBADV;AAERC,YAAAA,KAAK;AAFG,WAAD,CAAT;;AAZG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBP,OAAO,SAAUZ,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAM,CACJE,UAAU,CAACD,WAAW,CAACY,qBAAb,EAAoCd,WAApC,CADN,CAAN;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import * as actionTypes from '../../components/Menu/actions/actionTypes/actionTypes.js';\nimport { takeLatest, put } from 'redux-saga/effects';\nimport callBff from '../callBff.js'\n\nexport function* getMenuData(action) {\n  try {\n    // const getVenueName = state => state.router.route;\n    // const venueName = yield select(getVenueName);\n\n    const res = yield callBff('/menu', 'GET')\n      .then(response => response)\n      yield put({\n        type: actionTypes.GET_MENU_DATA_SUCCESS,\n        res,\n      })\n  } catch (error) {\n    yield put({\n      type: actionTypes.GET_MENU_DATA_FAILURE,\n      error,\n    })\n  }\n}\n\nexport function* actionWatcher() {\n  yield [\n    takeLatest(actionTypes.GET_MENU_DATA_REQUEST, getMenuData),\n  ]\n}\n"]},"metadata":{},"sourceType":"module"}