{"ast":null,"code":"// eslint-disable-next-line\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { router5Middleware } from 'redux-router5';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport makeRootReducer from './rootReducer';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './integration/sagas/rootSaga.js';\nexport var history = createBrowserHistory();\nexport default (function () {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var sagaMiddleware = createSagaMiddleware();\n  var middleware = [routerMiddleware(history), sagaMiddleware];\n  var enhancers = [];\n  var store = createStore(makeRootReducer(history), initialState, // for dev\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    trace: true\n  }).apply(void 0, [applyMiddleware.apply(void 0, middleware)].concat(enhancers)) // for prod\n  // compose(applyMiddleware(...middleware), ...enhancers),\n  );\n  store.asyncReducers = {};\n  sagaMiddleware.run(rootSaga);\n  window.store = store;\n  return store;\n});","map":{"version":3,"sources":["/Users/michaelfoster/Git/mryum/src/Store.js"],"names":["applyMiddleware","compose","createStore","router5Middleware","routerMiddleware","createBrowserHistory","makeRootReducer","createSagaMiddleware","rootSaga","history","initialState","sagaMiddleware","middleware","enhancers","store","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","asyncReducers","run"],"mappings":"AAAA;AACA,SAASA,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,iBAAT,QAAkC,eAAlC;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,OAAOC,eAAP,MAA4B,eAA5B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,iCAArB;AAEA,OAAO,IAAMC,OAAO,GAAGJ,oBAAoB,EAApC;AAEP,gBAAe,YAAuB;AAAA,MAAtBK,YAAsB,uEAAP,EAAO;AAEpC,MAAMC,cAAc,GAAGJ,oBAAoB,EAA3C;AAEA,MAAMK,UAAU,GAAG,CACjBR,gBAAgB,CAACK,OAAD,CADC,EAEjBE,cAFiB,CAAnB;AAIA,MAAME,SAAS,GAAG,EAAlB;AACA,MAAMC,KAAK,GAAGZ,WAAW,CACvBI,eAAe,CAACG,OAAD,CADQ,EAEvBC,YAFuB,EAGvB;AACAK,EAAAA,MAAM,CAACC,oCAAP,CAA4C;AAC1CC,IAAAA,KAAK,EAAE;AADmC,GAA5C,iBAEGjB,eAAe,MAAf,SAAmBY,UAAnB,CAFH,SAEsCC,SAFtC,EAJuB,CAOvB;AACA;AARuB,GAAzB;AAWAC,EAAAA,KAAK,CAACI,aAAN,GAAsB,EAAtB;AACAP,EAAAA,cAAc,CAACQ,GAAf,CAAmBX,QAAnB;AAEAO,EAAAA,MAAM,CAACD,KAAP,GAAeA,KAAf;AACA,SAAOA,KAAP;AACD,CAzBD","sourcesContent":["// eslint-disable-next-line\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { router5Middleware } from 'redux-router5';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history'\nimport makeRootReducer from './rootReducer';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './integration/sagas/rootSaga.js'\n\nexport const history = createBrowserHistory();\n\nexport default (initialState = {}) => {\n\n  const sagaMiddleware = createSagaMiddleware();\n\n  const middleware = [\n    routerMiddleware(history),\n    sagaMiddleware,\n  ];\n  const enhancers = [];\n  const store = createStore(\n    makeRootReducer(history),\n    initialState,\n    // for dev\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      trace: true,\n    })(applyMiddleware(...middleware), ...enhancers),\n    // for prod\n    // compose(applyMiddleware(...middleware), ...enhancers),\n  );\n\n  store.asyncReducers = {};\n  sagaMiddleware.run(rootSaga)\n\n  window.store = store;\n  return store;\n};\n"]},"metadata":{},"sourceType":"module"}