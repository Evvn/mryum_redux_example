{"ast":null,"code":"import _defineProperty from \"/Users/michaelfoster/Git/mryum/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/michaelfoster/Git/mryum/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelfoster/Git/mryum/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelfoster/Git/mryum/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelfoster/Git/mryum/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelfoster/Git/mryum/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaelfoster/Git/mryum/src/components/Landing/SendEmail.js\";\n// contact page email form for landing page\nimport React from 'react';\nimport Input from './Input';\nimport TextArea from './TextArea';\nimport Button from './Button';\nimport * as emailjs from 'emailjs-com';\n\nvar SendEmail =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SendEmail, _React$Component);\n\n  function SendEmail(props) {\n    var _this;\n\n    _classCallCheck(this, SendEmail);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SendEmail).call(this, props));\n    _this.state = {\n      name: '',\n      email: '',\n      subject: 'Mr Yum Website Contact!',\n      message: '',\n      errors: {\n        name: '',\n        email: '',\n        subject: '',\n        message: ''\n      }\n    };\n    return _this;\n  } // updates input values (stored in state) and prevents default actions\n\n\n  _createClass(SendEmail, [{\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      event.preventDefault();\n      var target = event.target;\n      var name = target.name;\n      var value = target.value;\n      this.setState(_defineProperty({}, name, value));\n    } // validates inputs to check if form is valid for sending or not\n\n  }, {\n    key: \"validateMail\",\n    value: function validateMail() {\n      var errors = {};\n      var formIsValid = true;\n\n      if (!this.state.name || this.state.name.length < 3) {\n        errors.name = 'Minimum 3 characters';\n        formIsValid = false;\n      }\n\n      if (!this.state.subject || this.state.subject.length < 3) {\n        errors.subject = 'Minimum 3 characters';\n        formIsValid = false;\n      }\n\n      if (!this.state.message || this.state.message.length < 3) {\n        errors.message = 'Minimum 3 characters';\n        formIsValid = false;\n      }\n\n      if (!this.state.email || this.state.email.length < 3) {\n        errors.email = 'Minimum 3 characters';\n        formIsValid = false;\n      }\n\n      var pattern = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n      if (!pattern.test(this.state.email)) {\n        errors.email = 'This is not a valid email';\n        formIsValid = false;\n      }\n\n      this.setState({\n        errors: errors\n      });\n      return formIsValid;\n    } // function to send email (fired on send button click)\n\n  }, {\n    key: \"sentMessage\",\n    value: function sentMessage(event) {\n      // prevents form submit default action\n      event.preventDefault(); // if any inputs are invalid, return the function here\n\n      if (!this.validateMail()) {\n        return;\n      } // set email template to inputs from contact form\n\n\n      var templateParams = {\n        from_name: this.state.name + ' (' + this.state.email + ')',\n        to_name: 'Mr Yum',\n        subject: this.state.subject,\n        message_html: this.state.message // emailjs function and user id\n\n      };\n      emailjs.send('gmail', 'template_dG7ZOoY7', templateParams, 'user_7WhVOMChLFHTXUuiEIk1J').then(function (response) {\n        console.log('Success!', response.status, response.text);\n      }, function (err) {\n        console.log(err);\n      }); // sets inputs to disabled and 'sent' states, as well as displaying sent confirmation\n\n      document.querySelectorAll('input').forEach(function (node) {\n        node.style.pointerEvents = 'none';\n        node.style.backgroundColor = '#ffffff';\n        node.placeholder = '';\n        node.disabled = true;\n      });\n      document.querySelectorAll('textarea').forEach(function (node) {\n        node.style.pointerEvents = 'none';\n        node.style.backgroundColor = '#ffffff';\n        node.placeholder = '';\n        node.disabled = true;\n      });\n      document.querySelectorAll('button').forEach(function (node) {\n        node.parentNode.removeChild(node);\n      });\n      var node = document.createElement('h2');\n      var textnode = document.createTextNode('Talk to you soon!');\n      node.appendChild(textnode);\n      document.querySelector('form').appendChild(node);\n      this.setState({\n        name: this.state.name,\n        email: this.state.email,\n        subject: '',\n        message: this.state.message\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        id: this.props.id,\n        className: this.props.className,\n        name: this.props.name,\n        method: this.props.method,\n        action: this.props.action,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Your name\",\n        className: \"form-control\",\n        required: \"required\",\n        onChange: this.handleInputChange.bind(this),\n        value: this.state.name,\n        error: this.state.errors.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(Input, {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Your email\",\n        className: \"form-control\",\n        required: \"required\",\n        onChange: this.handleInputChange.bind(this),\n        value: this.state.email,\n        error: this.state.errors.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(Input, {\n        type: \"text\",\n        name: \"subject\",\n        placeholder: \"What the subject is\",\n        className: \"form-control hidden\",\n        required: \"required\",\n        onChange: this.handleInputChange.bind(this) // value = {this.state.subject}\n        ,\n        value: \"Mr Yum Website Contact!\",\n        error: this.state.errors.subject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(TextArea, {\n        placeholder: \"Go ahead, we're listening...\",\n        name: \"message\",\n        id: \"message\",\n        required: \"required\",\n        className: \"form-control\",\n        rows: \"8\",\n        onChange: this.handleInputChange.bind(this),\n        value: this.state.message,\n        error: this.state.errors.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.sentMessage.bind(this),\n        type: \"button\",\n        name: \"submit\",\n        className: \"btn btn-primary btn-lg\",\n        required: \"required\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return SendEmail;\n}(React.Component);\n\nexport default SendEmail;","map":{"version":3,"sources":["/Users/michaelfoster/Git/mryum/src/components/Landing/SendEmail.js"],"names":["React","Input","TextArea","Button","emailjs","SendEmail","props","state","name","email","subject","message","errors","event","preventDefault","target","value","setState","formIsValid","length","pattern","test","validateMail","templateParams","from_name","to_name","message_html","send","then","response","console","log","status","text","err","document","querySelectorAll","forEach","node","style","pointerEvents","backgroundColor","placeholder","disabled","parentNode","removeChild","createElement","textnode","createTextNode","appendChild","querySelector","id","className","method","action","handleInputChange","bind","sentMessage","Component"],"mappings":"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","sourcesContent":["// contact page email form for landing page\nimport React from 'react'\nimport Input from './Input'\nimport TextArea from './TextArea'\nimport Button from './Button'\nimport * as emailjs from 'emailjs-com'\n\nclass SendEmail extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      name: '',\n      email: '',\n      subject: 'Mr Yum Website Contact!',\n      message: '',\n      errors: {\n        name: '',\n        email: '',\n        subject: '',\n        message: ''\n      }\n    }\n  }\n\n  // updates input values (stored in state) and prevents default actions\n  handleInputChange(event) {\n    event.preventDefault()\n    let target = event.target\n    let name = target.name\n    let value = target.value\n\n    this.setState({[name]: value})\n  }\n\n  // validates inputs to check if form is valid for sending or not\n  validateMail() {\n    let errors = {}\n    let formIsValid = true\n\n    if (!this.state.name || this.state.name.length < 3) {\n      errors.name = 'Minimum 3 characters'\n      formIsValid = false\n    }\n\n    if (!this.state.subject || this.state.subject.length < 3) {\n      errors.subject = 'Minimum 3 characters'\n      formIsValid = false\n    }\n\n    if (!this.state.message || this.state.message.length < 3) {\n      errors.message = 'Minimum 3 characters'\n      formIsValid = false\n    }\n\n    if (!this.state.email || this.state.email.length < 3) {\n      errors.email = 'Minimum 3 characters'\n      formIsValid = false\n    }\n\n    let pattern = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/\n\n    if (!pattern.test(this.state.email)) {\n      errors.email = 'This is not a valid email'\n      formIsValid = false\n    }\n\n    this.setState({errors: errors})\n\n    return formIsValid\n  }\n\n  // function to send email (fired on send button click)\n  sentMessage(event) {\n\n    // prevents form submit default action\n    event.preventDefault()\n\n    // if any inputs are invalid, return the function here\n    if (!this.validateMail()) {\n      return\n    }\n\n    // set email template to inputs from contact form\n    let templateParams = {\n      from_name: this.state.name + ' (' + this.state.email + ')',\n      to_name: 'Mr Yum',\n      subject: this.state.subject,\n      message_html: this.state.message\n    }\n\n    // emailjs function and user id\n    emailjs.send('gmail', 'template_dG7ZOoY7', templateParams, 'user_7WhVOMChLFHTXUuiEIk1J').then(function(response) {\n      console.log('Success!', response.status, response.text)\n    }, function(err) {\n      console.log(err)\n    })\n\n    // sets inputs to disabled and 'sent' states, as well as displaying sent confirmation\n    document.querySelectorAll('input').forEach((node) => {\n      node.style.pointerEvents = 'none';\n      node.style.backgroundColor = '#ffffff'\n      node.placeholder = ''\n      node.disabled = true\n\n    })\n    document.querySelectorAll('textarea').forEach((node) => {\n      node.style.pointerEvents = 'none';\n      node.style.backgroundColor = '#ffffff'\n      node.placeholder = ''\n      node.disabled = true\n    })\n    document.querySelectorAll('button').forEach((node) => {\n      node.parentNode.removeChild(node)\n    })\n\n    let node = document.createElement('h2')\n    let textnode = document.createTextNode('Talk to you soon!')\n    node.appendChild(textnode)\n    document.querySelector('form').appendChild(node)\n\n    this.setState({name: this.state.name, email: this.state.email, subject: '', message: this.state.message})\n  }\n\n  render() {\n\n    return (<div>\n\n      {/* Inputs for each field of the contact form - on changes, checks if they are valid or not */}\n      <form id={this.props.id} className={this.props.className} name={this.props.name} method={this.props.method} action={this.props.action}>\n\n        <Input type='text' name='name' placeholder=\"Your name\" className='form-control' required='required' onChange={this.handleInputChange.bind(this)} value={this.state.name} error={this.state.errors.name}/>\n\n        <Input type='email' name='email' placeholder='Your email' className='form-control' required='required' onChange={this.handleInputChange.bind(this)} value={this.state.email} error={this.state.errors.email}/>\n\n        <Input type='text' name='subject' placeholder='What the subject is' className='form-control hidden' required='required' onChange={this.handleInputChange.bind(this)}\n          // value = {this.state.subject}\n          value='Mr Yum Website Contact!' error={this.state.errors.subject}/>\n\n        <TextArea placeholder=\"Go ahead, we're listening...\" name = 'message' id = 'message' required = 'required' className = 'form-control' rows = '8' onChange = {this.handleInputChange.bind(this)}\n          value = {this.state.message}\n          error = {this.state.errors.message}\n          />\n\n          <Button onClick={this.sentMessage.bind(this)} type='button' name='submit' className='btn btn-primary btn-lg' required='required'/>\n\n        </form>\n\n      </div>\n      )\n  }\n}\n\nexport default SendEmail\n"]},"metadata":{},"sourceType":"module"}