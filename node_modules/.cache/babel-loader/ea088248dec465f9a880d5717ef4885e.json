{"ast":null,"code":"// eslint-disable-next-line\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { routerMiddleware } from 'connected-react-router';\nimport storage from 'redux-persist/lib/storage';\nimport { createBrowserHistory } from 'history';\nimport makeRootReducer from './rootReducer';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './integration/sagas/rootSaga.js';\nexport var history = createBrowserHistory();\nexport default (function () {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var sagaMiddleware = createSagaMiddleware();\n  var persistConfig = {\n    key: 'root',\n    storage: storage\n  };\n  var middleware = [routerMiddleware(history), sagaMiddleware];\n  var enhancers = [];\n  var store = createStore(persistReducer(persistConfig, makeRootReducer(history)), initialState, // for dev\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    trace: true\n  }).apply(void 0, [applyMiddleware.apply(void 0, middleware)].concat(enhancers)) // for prod\n  // compose(applyMiddleware(...middleware), ...enhancers),\n  );\n  store.asyncReducers = {};\n  sagaMiddleware.run(rootSaga);\n  window.store = store;\n  var persistor = persistStore(store);\n  return {\n    store: store,\n    persistor: persistor\n  };\n});","map":{"version":3,"sources":["/Users/michaelfoster/Git/mryum/src/Store.js"],"names":["applyMiddleware","compose","createStore","persistStore","persistReducer","routerMiddleware","storage","createBrowserHistory","makeRootReducer","createSagaMiddleware","rootSaga","history","initialState","sagaMiddleware","persistConfig","key","middleware","enhancers","store","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","asyncReducers","run","persistor"],"mappings":"AAAA;AACA,SAASA,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,OAAOC,eAAP,MAA4B,eAA5B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,iCAArB;AAEA,OAAO,IAAMC,OAAO,GAAGJ,oBAAoB,EAApC;AAEP,gBAAe,YAAuB;AAAA,MAAtBK,YAAsB,uEAAP,EAAO;AAEpC,MAAMC,cAAc,GAAGJ,oBAAoB,EAA3C;AACA,MAAMK,aAAa,GAAG;AACpBC,IAAAA,GAAG,EAAE,MADe;AAEpBT,IAAAA,OAAO,EAAPA;AAFoB,GAAtB;AAKA,MAAMU,UAAU,GAAG,CACjBX,gBAAgB,CAACM,OAAD,CADC,EAEjBE,cAFiB,CAAnB;AAIA,MAAMI,SAAS,GAAG,EAAlB;AACA,MAAMC,KAAK,GAAGhB,WAAW,CACvBE,cAAc,CAACU,aAAD,EAAgBN,eAAe,CAACG,OAAD,CAA/B,CADS,EAEvBC,YAFuB,EAGvB;AACAO,EAAAA,MAAM,CAACC,oCAAP,CAA4C;AAC1CC,IAAAA,KAAK,EAAE;AADmC,GAA5C,iBAEGrB,eAAe,MAAf,SAAmBgB,UAAnB,CAFH,SAEsCC,SAFtC,EAJuB,CAOvB;AACA;AARuB,GAAzB;AAWAC,EAAAA,KAAK,CAACI,aAAN,GAAsB,EAAtB;AACAT,EAAAA,cAAc,CAACU,GAAf,CAAmBb,QAAnB;AAEAS,EAAAA,MAAM,CAACD,KAAP,GAAeA,KAAf;AACA,MAAIM,SAAS,GAAGrB,YAAY,CAACe,KAAD,CAA5B;AACA,SAAO;AAAEA,IAAAA,KAAK,EAALA,KAAF;AAASM,IAAAA,SAAS,EAATA;AAAT,GAAP;AACD,CA9BD","sourcesContent":["// eslint-disable-next-line\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport { routerMiddleware } from 'connected-react-router';\nimport storage from 'redux-persist/lib/storage'\nimport { createBrowserHistory } from 'history'\nimport makeRootReducer from './rootReducer';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './integration/sagas/rootSaga.js'\n\nexport const history = createBrowserHistory();\n\nexport default (initialState = {}) => {\n\n  const sagaMiddleware = createSagaMiddleware();\n  const persistConfig = {\n    key: 'root',\n    storage,\n  }\n\n  const middleware = [\n    routerMiddleware(history),\n    sagaMiddleware,\n  ];\n  const enhancers = [];\n  const store = createStore(\n    persistReducer(persistConfig, makeRootReducer(history)),\n    initialState,\n    // for dev\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      trace: true,\n    })(applyMiddleware(...middleware), ...enhancers),\n    // for prod\n    // compose(applyMiddleware(...middleware), ...enhancers),\n  );\n\n  store.asyncReducers = {};\n  sagaMiddleware.run(rootSaga)\n\n  window.store = store;\n  let persistor = persistStore(store)\n  return { store, persistor} ;\n};\n"]},"metadata":{},"sourceType":"module"}