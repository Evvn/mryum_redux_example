{"ast":null,"code":"import _regeneratorRuntime from \"/Users/michaelfoster/Git/mryum/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getMenuData),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(actionWatcher);\n\nimport * as actionTypes from '../../components/Menu/actions/actionTypes/actionTypes.js';\nimport { takeLatest, put, select } from 'redux-saga/effects';\nimport callBff from '../callBff.js';\nexport function getMenuData(action) {\n  var getVenueName, venueName, body, res;\n  return _regeneratorRuntime.wrap(function getMenuData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n\n          getVenueName = function getVenueName(state) {\n            return state.router.route.params.venue;\n          };\n\n          _context.next = 4;\n          return select(getVenueName);\n\n        case 4:\n          venueName = _context.sent;\n          console.log(venueName);\n          body = {\n            venueName: venueName\n          };\n          _context.next = 9;\n          return callBff('/menu', 'GET', body).then(function (response) {\n            return response;\n          });\n\n        case 9:\n          res = _context.sent;\n          _context.next = 12;\n          return put({\n            type: actionTypes.GET_MENU_DATA_SUCCESS,\n            res: res\n          });\n\n        case 12:\n          _context.next = 18;\n          break;\n\n        case 14:\n          _context.prev = 14;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 18;\n          return put({\n            type: actionTypes.GET_MENU_DATA_FAILURE,\n            error: _context.t0\n          });\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 14]]);\n}\nexport function actionWatcher() {\n  return _regeneratorRuntime.wrap(function actionWatcher$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return [takeLatest(actionTypes.GET_MENU_DATA_REQUEST, getMenuData)];\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n}","map":{"version":3,"sources":["/Users/michaelfoster/Git/mryum/src/integration/sagas/menuIntegration.js"],"names":["getMenuData","actionWatcher","actionTypes","takeLatest","put","select","callBff","action","getVenueName","state","router","route","params","venue","venueName","console","log","body","then","response","res","type","GET_MENU_DATA_SUCCESS","GET_MENU_DATA_FAILURE","error","GET_MENU_DATA_REQUEST"],"mappings":";;;;yBAIiBA,W;;;yBAqBAC,a;;AAzBjB,OAAO,KAAKC,WAAZ,MAA6B,0DAA7B;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,MAA1B,QAAwC,oBAAxC;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,OAAO,SAAUN,WAAV,CAAsBO,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEGC,UAAAA,YAFH,GAEkB,SAAfA,YAAe,CAAAC,KAAK;AAAA,mBAAIA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,MAAnB,CAA0BC,KAA9B;AAAA,WAFvB;;AAAA;AAGe,iBAAMR,MAAM,CAACG,YAAD,CAAZ;;AAHf;AAGGM,UAAAA,SAHH;AAIHC,UAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACMG,UAAAA,IALH,GAKU;AAAEH,YAAAA,SAAS,EAATA;AAAF,WALV;AAAA;AAOS,iBAAMR,OAAO,CAAC,OAAD,EAAU,KAAV,EAAiBW,IAAjB,CAAP,CACfC,IADe,CACV,UAAAC,QAAQ;AAAA,mBAAIA,QAAJ;AAAA,WADE,CAAN;;AAPT;AAOGC,UAAAA,GAPH;AAAA;AASD,iBAAMhB,GAAG,CAAC;AACRiB,YAAAA,IAAI,EAAEnB,WAAW,CAACoB,qBADV;AAERF,YAAAA,GAAG,EAAHA;AAFQ,WAAD,CAAT;;AATC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAcH,iBAAMhB,GAAG,CAAC;AACRiB,YAAAA,IAAI,EAAEnB,WAAW,CAACqB,qBADV;AAERC,YAAAA,KAAK;AAFG,WAAD,CAAT;;AAdG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBP,OAAO,SAAUvB,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAM,CACJE,UAAU,CAACD,WAAW,CAACuB,qBAAb,EAAoCzB,WAApC,CADN,CAAN;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import * as actionTypes from '../../components/Menu/actions/actionTypes/actionTypes.js';\nimport { takeLatest, put, select } from 'redux-saga/effects';\nimport callBff from '../callBff.js'\n\nexport function* getMenuData(action) {\n  try {\n    const getVenueName = state => state.router.route.params.venue;\n    const venueName = yield select(getVenueName);\n    console.log(venueName)\n    const body = { venueName };\n\n    const res = yield callBff('/menu', 'GET', body)\n      .then(response => response)\n      yield put({\n        type: actionTypes.GET_MENU_DATA_SUCCESS,\n        res,\n      })\n  } catch (error) {\n    yield put({\n      type: actionTypes.GET_MENU_DATA_FAILURE,\n      error,\n    })\n  }\n}\n\nexport function* actionWatcher() {\n  yield [\n    takeLatest(actionTypes.GET_MENU_DATA_REQUEST, getMenuData),\n  ]\n}\n"]},"metadata":{},"sourceType":"module"}