{"ast":null,"code":"import _classCallCheck from \"/Users/evan/pitchblak/v2mryum/mryum/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/evan/pitchblak/v2mryum/mryum/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/evan/pitchblak/v2mryum/mryum/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/evan/pitchblak/v2mryum/mryum/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/evan/pitchblak/v2mryum/mryum/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/evan/pitchblak/v2mryum/mryum/src/components/Menu/Menu.js\";\n// Menu component - main dude,  gets called in App.js with url path to select correct venue in airtable\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport React, { Component } from 'react'; // import './App.css';\n\nimport * as actions from './actions/actions.js';\nimport LoadingScreen from '../LoadingScreen/LoadingScreen.js';\nimport NotFound from '../NotFound/NotFound.js';\nimport Section from './Section.js';\nimport MenuItem from './MenuItem.js';\nimport MenuList from './MenuList.js';\nimport Header from './Header.js';\nimport Footer from './Footer.js';\nimport ItemDetail from './ItemDetail.js';\n\nvar Menu =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Menu, _Component);\n\n  function Menu(props) {\n    var _this;\n\n    _classCallCheck(this, Menu);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Menu).call(this, props));\n    var paramArray = window.location.href.split('/');\n    _this.params = {\n      requestedVenue: paramArray[3],\n      item: paramArray.length === 5 ? paramArray[4] : false\n    };\n    return _this;\n  }\n\n  _createClass(Menu, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this$props = this.props,\n          getMenuData = _this$props.getMenuData,\n          bffRes = _this$props.bffRes,\n          venue = _this$props.venue;\n\n      if (!bffRes || this.params.requestedVenue !== venue) {\n        getMenuData(this.params.requestedVenue);\n      }\n    }\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate() {\n      var _this$props2 = this.props,\n          getMenuData = _this$props2.getMenuData,\n          bffRes = _this$props2.bffRes,\n          venue = _this$props2.venue;\n\n      if (!bffRes || this.params.requestedVenue !== venue) {\n        getMenuData(this.params.requestedVenue);\n      }\n    }\n  }, {\n    key: \"routeItemDetails\",\n    value: function routeItemDetails(e, id) {\n      e.stopPropagation();\n      window.location = window.location.href + \"/\".concat(id);\n    }\n  }, {\n    key: \"generateView\",\n    value: function generateView() {\n      var _this$props3 = this.props,\n          bffRes = _this$props3.bffRes,\n          filter = _this$props3.filter,\n          updateFilter = _this$props3.updateFilter;\n      var itemId = this.params.item;\n      var venueName = Object.values(bffRes)[0].fields.Venue; // add 'Menu' to the end of the doc title - shows in tab\n\n      document.title = venueName + \" Menu\";\n\n      if (itemId) {\n        return React.createElement(ItemDetail, {\n          details: bffRes[itemId].fields,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          className: \"Menu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(Header, {\n          venueName: venueName,\n          showLanguageSelect: true,\n          showFilter: true,\n          filter: filter,\n          updateFilter: updateFilter,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"menu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, this.printMenu(bffRes), React.createElement(Footer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        })));\n      }\n    }\n  }, {\n    key: \"printMenu\",\n    value: function printMenu(menuSections) {\n      var _this2 = this;\n\n      var filter = this.props.filter;\n      var tagsInUse = [];\n      Object.keys(filter).forEach(function (tag) {\n        if (filter[tag]) {\n          tagsInUse.push(tag);\n        }\n      });\n\n      if (menuSections.length === 0) {\n        return React.createElement(NotFound, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        });\n      } else {\n        var menu = [];\n        var sections = [];\n        var itemIndex = 0;\n        Object.keys(menuSections).forEach(function (section) {\n          // if item section name does not exist in sections\n          if (sections.indexOf(menuSections[section].fields['Sections']) === -1) {\n            // push the section in here\n            sections.push(menuSections[section].fields['Sections']); // and push the SECTION COMPONENT in here\n\n            menu.push(React.createElement(Section, {\n              itemIndex: itemIndex,\n              key: menuSections[section].fields['Sections'],\n              name: menuSections[section].fields['Sections'],\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 92\n              },\n              __self: this\n            }));\n          } // add ITEMS to menu under each SECTION\n          // check if menu item is list item\n\n\n          var hasTag = menuSections[section].fields.Tags ? true : false;\n          var tags = menuSections[section].fields.Tags; // if it is not a list, else (if it is)\n\n          if (hasTag) {\n            // IF MENU ITEM HAS TAGS BUT IS NOT A LIST ITEM\n            if (tags[0] !== 'LIST') {\n              if (tagsInUse.length > 0 && tagsInUse.some(function (tag) {\n                return tags.includes(tag);\n              })) {\n                // if menu item tags match any tags in filter\n                menu.push(React.createElement(MenuItem, {\n                  key: menuSections[section].id,\n                  onClick: function onClick(e) {\n                    _this2.routeItemDetails(e, menuSections[section].id);\n                  },\n                  item: menuSections[section].fields,\n                  itemIndex: itemIndex,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 111\n                  },\n                  __self: this\n                }));\n              } else if (tagsInUse.length === 0) {\n                // if no tags are in use, push non list item with tags\n                menu.push(React.createElement(MenuItem, {\n                  key: menuSections[section].id,\n                  onClick: function onClick(e) {\n                    _this2.routeItemDetails(e, menuSections[section].id);\n                  },\n                  item: menuSections[section].fields,\n                  itemIndex: itemIndex,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 123\n                  },\n                  __self: this\n                }));\n              }\n            } else if (tagsInUse.length === 0) {\n              // IF MENU ITEM IS A LIST ITEM & no tags are in use\n              menu.push(React.createElement(MenuList, {\n                key: menuSections[section].id,\n                onClick: function onClick(e) {\n                  _this2.routeItemDetails(e, menuSections[section].id);\n                },\n                item: menuSections[section].fields,\n                itemIndex: itemIndex,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 136\n                },\n                __self: this\n              }));\n            }\n          } else {\n            if (tagsInUse.length === 0) {\n              // IF MENU ITEM HAS NO TAGS -- always hide when filter is in use\n              menu.push(React.createElement(MenuItem, {\n                key: menuSections[section].id,\n                onClick: function onClick(e) {\n                  _this2.routeItemDetails(e, menuSections[section].id);\n                },\n                item: menuSections[section].fields,\n                itemIndex: itemIndex,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 149\n                },\n                __self: this\n              }));\n            }\n          } // if filter matches, add item and index ++, else next item * TO DO\n\n\n          itemIndex++;\n        }); // remove empty sections\n\n        var noEmptySections = menu.forEach(function (element, index) {\n          // if menu object is type Section\n          if (element.type.name === 'Section') {\n            // if next object after Section is not type MenuItem/MenuList or is undefined (REMOVE SECTION IF SO)\n            if (typeof menu[index + 1] !== 'undefined') {\n              if (menu[index + 1].type.name !== 'MenuItem' && menu[index + 1].type.name !== 'MenuList') {\n                // remove Section object from Menu arr here\n                return element;\n              }\n            }\n          }\n        });\n        return noEmptySections;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isLoading = this.props.isLoading;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, isLoading ? React.createElement(LoadingScreen, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }) : this.generateView());\n    }\n  }]);\n\n  return Menu;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators(actions, dispatch);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    bffRes: state.persistentMenu.bffRes,\n    isLoading: state.persistentMenu.isLoading,\n    venue: state.persistentMenu.venue,\n    filter: state.menu.filter\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);","map":{"version":3,"sources":["/Users/evan/pitchblak/v2mryum/mryum/src/components/Menu/Menu.js"],"names":["connect","bindActionCreators","React","Component","actions","LoadingScreen","NotFound","Section","MenuItem","MenuList","Header","Footer","ItemDetail","Menu","props","paramArray","window","location","href","split","params","requestedVenue","item","length","getMenuData","bffRes","venue","e","id","stopPropagation","filter","updateFilter","itemId","venueName","Object","values","fields","Venue","document","title","printMenu","menuSections","tagsInUse","keys","forEach","tag","push","menu","sections","itemIndex","section","indexOf","hasTag","Tags","tags","some","includes","routeItemDetails","noEmptySections","element","index","type","name","isLoading","generateView","mapDispatchToProps","dispatch","mapStateToProps","state","persistentMenu"],"mappings":"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","sourcesContent":["// Menu component - main dude,  gets called in App.js with url path to select correct venue in airtable\nimport {connect} from 'react-redux'\nimport {bindActionCreators} from 'redux'\nimport React, {Component} from 'react';\n// import './App.css';\nimport * as actions from './actions/actions.js'\nimport LoadingScreen from '../LoadingScreen/LoadingScreen.js'\nimport NotFound from '../NotFound/NotFound.js'\nimport Section from './Section.js'\nimport MenuItem from './MenuItem.js'\nimport MenuList from './MenuList.js'\nimport Header from './Header.js'\nimport Footer from './Footer.js'\nimport ItemDetail from './ItemDetail.js'\n\nclass Menu extends Component {\n  constructor(props) {\n     super(props)\n\n     const paramArray = window.location.href.split('/');\n     this.params = {\n        requestedVenue: paramArray[3],\n        item: paramArray.length === 5 ? paramArray[4] : false,\n     }\n   }\n\n  componentWillMount() {\n    const {getMenuData, bffRes, venue} = this.props;\n    if (!bffRes || this.params.requestedVenue !== venue) {\n      getMenuData(this.params.requestedVenue);\n    }\n  }\n\n  componentWillUpdate() {\n    const {getMenuData, bffRes, venue} = this.props;\n    if (!bffRes || this.params.requestedVenue !== venue) {\n      getMenuData(this.params.requestedVenue);\n    }\n  }\n\n  routeItemDetails(e, id) {\n    e.stopPropagation();\n    window.location = window.location.href + `/${id}`\n  }\n\n  generateView() {\n    const { bffRes, filter, updateFilter } = this.props\n    const itemId = this.params.item\n    const venueName = Object.values(bffRes)[0].fields.Venue\n\n    // add 'Menu' to the end of the doc title - shows in tab\n    document.title = venueName + \" Menu\";\n\n    if (itemId) {\n      return (<ItemDetail details={bffRes[itemId].fields}/>)\n    } else {\n      return (<div className=\"Menu\">\n        <Header venueName={venueName} showLanguageSelect showFilter filter={filter} updateFilter={updateFilter}/>\n\n        <div className=\"menu\">\n          {this.printMenu(bffRes)}\n\n          <Footer/>\n        </div>\n\n      </div>)\n    }\n  }\n\n  printMenu(menuSections) {\n    const { filter } = this.props\n    let tagsInUse = []\n    Object.keys(filter).forEach(tag => {\n      if (filter[tag]) {\n        tagsInUse.push(tag)\n      }\n    })\n\n    if (menuSections.length === 0) {\n      return <NotFound/>\n    } else {\n      let menu = []\n      let sections = []\n      let itemIndex = 0;\n      Object.keys(menuSections).forEach(section => {\n        // if item section name does not exist in sections\n        if (sections.indexOf(menuSections[section].fields['Sections']) === -1) {\n          // push the section in here\n          sections.push(menuSections[section].fields['Sections'])\n          // and push the SECTION COMPONENT in here\n          menu.push(\n            <Section\n              itemIndex={itemIndex}\n              key={menuSections[section].fields['Sections']}\n              name={menuSections[section].fields['Sections']}\n            />\n          )\n        }\n\n        // add ITEMS to menu under each SECTION\n        // check if menu item is list item\n        const hasTag = menuSections[section].fields.Tags ? true : false;\n        const tags = menuSections[section].fields.Tags;\n        // if it is not a list, else (if it is)\n        if (hasTag) {\n          // IF MENU ITEM HAS TAGS BUT IS NOT A LIST ITEM\n          if (tags[0] !== 'LIST') {\n            if (tagsInUse.length > 0 && tagsInUse.some(tag => tags.includes(tag))) {\n              // if menu item tags match any tags in filter\n              menu.push(\n                <MenuItem\n                  key={menuSections[section].id}\n                  onClick={(e) => {\n                      this.routeItemDetails(e, menuSections[section].id)\n                    }}\n                  item={menuSections[section].fields}\n                  itemIndex={itemIndex}\n                />\n              );\n            } else if (tagsInUse.length === 0) {\n              // if no tags are in use, push non list item with tags\n              menu.push(\n                <MenuItem\n                  key={menuSections[section].id}\n                  onClick={(e) => {\n                      this.routeItemDetails(e, menuSections[section].id)\n                    }}\n                  item={menuSections[section].fields}\n                  itemIndex={itemIndex}\n                />\n              )\n            }\n          } else if (tagsInUse.length === 0) {\n            // IF MENU ITEM IS A LIST ITEM & no tags are in use\n            menu.push(\n              <MenuList\n                key={menuSections[section].id}\n                onClick={(e) => {\n                    this.routeItemDetails(e, menuSections[section].id)\n                  }}\n                item={menuSections[section].fields}\n                itemIndex={itemIndex}\n              />\n            );\n          }\n        } else {\n          if (tagsInUse.length === 0) {\n            // IF MENU ITEM HAS NO TAGS -- always hide when filter is in use\n            menu.push(<MenuItem key={menuSections[section].id} onClick={(e) => {\n              this.routeItemDetails(e, menuSections[section].id)\n              }}\n              item={menuSections[section].fields} itemIndex={itemIndex} />\n            );\n          }\n        }\n        // if filter matches, add item and index ++, else next item * TO DO\n        itemIndex++;\n      })\n\n      // remove empty sections\n      const noEmptySections = menu.forEach((element, index) => {\n        // if menu object is type Section\n        if (element.type.name === 'Section') {\n          // if next object after Section is not type MenuItem/MenuList or is undefined (REMOVE SECTION IF SO)\n          if (typeof menu[index + 1] !== 'undefined') {\n            if (menu[index + 1].type.name !== 'MenuItem' &&\n                menu[index + 1].type.name !== 'MenuList')\n            {\n              // remove Section object from Menu arr here\n              return element\n            }\n          }\n        }\n      })\n\n      return noEmptySections;\n    }\n\n  }\n\n  render() {\n    const {isLoading} = this.props\n    return (<div>\n      {\n        isLoading\n          ? <LoadingScreen/>\n          : this.generateView()\n      }\n    </div>)\n  }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators(actions, dispatch)\n\nconst mapStateToProps = state => ({\n  bffRes: state.persistentMenu.bffRes,\n  isLoading: state.persistentMenu.isLoading,\n  venue: state.persistentMenu.venue,\n  filter: state.menu.filter,\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);\n"]},"metadata":{},"sourceType":"module"}